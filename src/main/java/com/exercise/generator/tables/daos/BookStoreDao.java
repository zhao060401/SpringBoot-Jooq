/*
 * This file is generated by jOOQ.
 */
package com.exercise.generator.tables.daos;


import com.exercise.generator.tables.BookStore;
import com.exercise.generator.tables.records.BookStoreRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookStoreDao extends DAOImpl<BookStoreRecord, com.exercise.generator.tables.pojos.BookStore, String> {

    /**
     * Create a new BookStoreDao without any configuration
     */
    public BookStoreDao() {
        super(BookStore.BOOK_STORE, com.exercise.generator.tables.pojos.BookStore.class);
    }

    /**
     * Create a new BookStoreDao with an attached configuration
     */
    public BookStoreDao(Configuration configuration) {
        super(BookStore.BOOK_STORE, com.exercise.generator.tables.pojos.BookStore.class, configuration);
    }

    @Override
    public String getId(com.exercise.generator.tables.pojos.BookStore object) {
        return object.getName();
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.exercise.generator.tables.pojos.BookStore> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(BookStore.BOOK_STORE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.exercise.generator.tables.pojos.BookStore> fetchByName(String... values) {
        return fetch(BookStore.BOOK_STORE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.exercise.generator.tables.pojos.BookStore fetchOneByName(String value) {
        return fetchOne(BookStore.BOOK_STORE.NAME, value);
    }
}
